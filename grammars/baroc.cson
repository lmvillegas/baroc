# TextMate tutorial: http://manual.macromates.com/en/language_grammars

# Regex to convert keys to unquoted: '(include|match|captures|begin|end|beginCaptures|endCaptures|name|patterns|0|1|2|3|4|5|6|7|8|9|comment|fileTypes|scopeName|repository|contentName|firstLineMatch|foldingStartMarker|foldingStopMarker)':

scopeName: 'source.baroc' # <scope> should be a short, unique indicator for the language ("js", "php", "c", etc.)
name: 'Baroc' # The title that will show up in grammar selection and on your status bar.
fileTypes: [ # An array of file extensions.
  'baroc'
  'mrl'
]
firstLineMatch: '' # A regular expression that is matched against the first line of the document when Atom is trying to decide if the grammar is appropriate. Useful for shell scripts, mostly.
foldingStartMarker: '^(\{' # A regular expression that checks for the start of a foldable area (such as `{`).
foldingStopMarker: '^(\}' # A regular expression that checks for the end of a foldable area (such as `}`). If both folding markers are matched in the same line, there will be no foldable area.
patterns: [ 
  {
    'include': '#line_comment'
  }
  
]
repository: 
  'line_comment':
    'begin': '(^[ \\t]+)?(?=#)'
    'beginCaptures':
      '1':
        'name': 'punctuation.whitespace.comment.leading.baroc'
    'end': '(?!\\G)'
    'patterns': [
      {
        'begin': '#'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.baroc'
        'end': '\\n'
        'name': 'comment.line.number-sign.baroc'
      }
    ]